 

Appendix E Evaluate calc equations interactively 

1.Komodo IDE (commercial version): Cut and paste the entire _onceeq.py 
file into the interactive shell for access to equations and terms. 

2.IPython Notebook: http://ipython.org/notebook.html Cut and paste the 
entire _onceeq.py file into a notebook cell for interactive access to 
equations and terms. 

3.IEP (see Section 2). Cut and paste equations and terms from the 
_onceeq.py file into the shell for editing. If more than 1 equation at a 
time is pasted it is treated as a single block. 

4. IPython Terminal and Qt shell: http://ipython.org/ 

Method 1. Open IPython and run %autoindent (toggle off). Cut and paste 
content of _onceeq.py into IPython. Method 2. Copy onceipy.py to the 
Python /lib/site-packages directory and run it from the model folder. 
Run the script onceipy.py to update the IPython history.sqlilte database 
with the equations in _onceeq.py. Next, run _onceeq.py in IPython to set 
up the environment. Both steps are executed by the IPy macro button 
(Ctrl-Shift-I) on the Komodo on-c-e toolbar (Appendix C ). Run the macro 
after running the model and when the model or calc has focus. Modify the 
command "run_onceipy" (at the end of the tool list in the Komodo 
toolbox) by adding the location of the history.sqlite directory to the 
command line entry (without brackets), i.e. python -m onceipy.py 
[C:\Users\rhh\.ipython\profile_default] 

onceipy reads model equations from the _equations.py file previously 
generated by onceutf or oncepy . The equations and terms are added to 
the history.sqlite database and assigned the next session number. A 
backup copy of the file is made before the new equation records are 
added. If the history.sqlite file becomes too large or corrupted it may 
be deleted and then reinitialized simply by running IPython from the 
command line. After reinitializing, exit IPython before adding new 
models to the history database. Equations and terms are available in the 
shell through command history scrolling with up and down arrows (type 
the first few letters to filter), and may also be accessed with search 
(Ctrl-r) and the %hist ref n command -where ref is of the form s/e n (-n 
numbers the entries) -s is the session number, e is the range of 
entries, use s/ for all -s may also be ~s which is the relative session 
number counting back, i.e. ~1/ -n lists and numbers the most recently 
added on-c-e model. - recall a history line with rep num where num is 
the history reference number -array equations are written to the model 
history with quotes to avoid unit conflicts in initial processing. 

Figure 16 . Screenshots of model equations in IPython shells Appendix F 
Generate PDF calcs on workstations 

Run a local folder copy of onceutf .py on Linux , Windows , Mac: Install 
a scientific Python distribution. Install UTF font symbols: 
http://dejavufonts.org/wiki/Main_Page 

Copy onceutf.py and the model file into the same folder, open a console 
window in the model or project folder and type: 

python onceutf.py ffdd.name.txt (-t or b) (-noclean) (-nn) 

where ffcc.name.txt is the file name of the input model; -t or b are 
options to echo calculation results to the terminal or browser; -nn is 
the two digit line length (default 80) and noclean retains the auxiliary 
PDF files. 

To open a terminal window in in Windows 7 or 8, navigate to the folder 
with the model, hold the shift key, right click in the folder and click 
on 'open command window here'. Change the browser encoding settings if 
needed: Chrome type chrome:settings/fonts in url bar - scroll to the 
bottom of the dialog box to make the change. Firefox - options - content 
- advanced - UTF -8 

Internet Explorer - right click in window - encoding - UTF -8 

Run a site-packages copy of onceutf on Linux , Windows , Mac : Install a 
scientific Python distribution. Copy the onceutfnnn.py file into the 
Python/Lib/site-packages/ folder and rename to onceutf .py. Run from any 
directory with the command 

python m onceutf m.modfile.txt 

Run the oncepy environment on Linux , Windows , Mac: 1.Install Anaconda 
1.9.2 2.Install unum, tabulate and PIL modules (using pip install) 
3.Install TexLive 4.Install DejaVu Fonts and set to Mono in IDE 
5.Install Komodo Edit or IDE 6.Install on-c-e tools for Komodo 7.Unzip 
and copy the oncepy folder into Python/Lib/site-packages/ 8.Run from any 
model or project folder containing the model file: 

python m oncepy nnnn.modfile.txt 

Appendix G Write UTF calcs on Android and iOS 

iOS 

onceutf runs in the iOS Pythonista App environment which includes numpy, 
sympy and matplotlib libraries. Copy the onceutf.py file to the 
site-packages folder and a model file into a (division) folder. 

Without Dropbox integration files are moved by creating new empty files 
in Pythonista and using copy and paste. A script for downloading Dropbox 
files to Pythonista is at: 
https://omz-forums.appspot.com/pythonista/post/4995757044137984 ). 

Open the onceutf.py program in Pythonista and create an action (wrench 
menu) for it, leaving the argument blank. Open a model or template. Run 
it by invoking the action. The calc will be echoed to the screen. File 
management, searching, UTF-8 fonts and word wrap functions are available 
in Textastic or Notesy Apps. The calc can be opened using an action and 
the following script where program is notsey or textastic. 

open_calc.py script (http://on-c-e.us ) """open Pythonista calc in app 

1. Copy this script to Pythonista and set it as an action. 2. Set the 
fixed width font to DejaVu Sans Mono. """ import editor import 
webbrowser import clipboard base = 
'program://x-callback-url/append?name=calc_tmp.txt' text = 
editor.get_text() url = clipboard.set(text) webbrowser.open(base) 

Figure 17 . Screenshot of onceutf calc on iPhone 

Android 

onceutf runs in the QPython App (Python 2) environment on Android . Copy 
the compiled numpy and sympy libraries into the site-packages folder at 

/mnt/sdcard/com.hipipal.qpyplus/lib/python2.7/site-packages. 

The compiled libraries are available through QPython sites and also at 
http://on-c-e.us . Matplotlib libraries are not yet available. 

The following file arrangement and script makes it convenient to iterate 
and review a model. It uses the DroidEdit App to edit the model and view 
the calc. The Hackers Keyboard App is efficient for writing models. 

once.py script (http://on-c-e.us ) 

#qpy:console """ once.py script runs a onceutf model on Android using 
QPython 

1. Copy onceutf.py to the scripts folder (see prog path below) 2. Create 
a division folder for the models (see model path below) 3. Copy the 
model and this script into the division folder 4. Open this script in 
QEdit (which is part of QPython) 5. Modify folder and model names below, 
as needed, and save. 6. Edit models and review calcs in DroidEdit (or 
similar editor). 7. Set the editor font to DejaVu Sans Mono for calc 
math symbols. 8. Run this script in QEdit to execute program. 

""" 

import os, sys 

prog ='/mnt/sdcard/com.hipipal.qpyplus/scripts/onceutf.py' model 
='/mnt/sdcard/com.hipipal.qpyplus/models/0301.deflection.txt' 
os.system(sys.executable + + prog + + model) 

Figure 18 . Screenshot of onceutf calc on Android tablet in DroidEdit 

